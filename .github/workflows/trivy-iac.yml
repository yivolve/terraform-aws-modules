name: Trivy IaC
on:
  pull_request:
    branches:
      - main

permissions:
  pull-requests: write

jobs:
  build:
    name: Trivy IaC
    runs-on: ubuntu-20.04
    env:
      VULN_SCAN_FILE: "vulnerability_results.txt"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'table'
          output: ${{ env.VULN_SCAN_FILE }}
          exit-code: '0'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Read scan vulnerability report
        if: always()
        id: vulnerability_report
        run: |
          echo 'CONT_SCAN_REPORT<<EOF' >> $GITHUB_OUTPUT
          cat ${{ env.VULN_SCAN_FILE }} >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      # - name: Comment PR
      #   if: github.event_name == 'pull_request'
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: `### Action #${{ github.run_number }} Results: **${{ steps.vulnerability_report.outcome }}**

      #         Vulnerability Scan: ${{ steps.vulnerability_report.outputs.CONT_SCAN_REPORT }}

      #         Job ðŸ”—: [Job Number ${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})`
      #       })

      - name: Comment PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### Vulnerability Scan (Action Run: #${{ github.run_number }}) Results:

              Job ðŸ”—: [Job Number ${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

              Random text
              `
            })

      # - name: Generate Summary
      #   if: always()
      #   run: |
      #     cat > $GITHUB_STEP_SUMMARY << EOL

      #     ### Container Vulnerability Scan
      #     ${{ steps.vulnerability_report.outputs.CONT_SCAN_REPORT }}
      #     EOL
